https://machinelearningmastery.com/tutorial-first-neural-network-python-keras/
https://www.tensorflow.org/tensorboard/get_started

from numpy import loadtxt
import tensorflow as tf
l1 = loadtxt('processed/engnet.txt', delimiter=',')
l2 = loadtxt('processed/cmn2006.txt', delimiter=',')
train_dataset = tf.data.Dataset.from_tensor_slices((l1,l2))

checkpoint_path = "data/cp.ckpt"
checkpoint_dir = os.path.dirname(checkpoint_path)

# Create a callback that saves the model's weights
cp_callback = tf.keras.callbacks.ModelCheckpoint(filepath=checkpoint_path,
                                                 save_weights_only=True,
                                                 verbose=1)


model = tf.keras.models.Sequential([
  tf.keras.layers.Dense(2082, activation='relu'),
  tf.keras.layers.Dense(2082, activation='relu'),
  tf.keras.layers.Dense(2082, activation='relu'),
  tf.keras.layers.Dense(2082, activation='softmax'),
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
model.load_weights(checkpoint_path)
tf.keras.backend.set_floatx('float64')
model.fit(train_dataset, callbacks=[cp_callback],epochs=5)

model.evaluate(x_test,  y_test, verbose=2)
